/*! modernizr 3.3.1 (Custom Build) | MIT *
 * http://modernizr.com/download/?-csstransitions-svgasimg-setclasses !*/
!function(e, n, t) {
    function o(e, n) {
        return typeof e === n
    }
    function r() {
        var e, n, t, r, i, s, a;
        for (var l in w)
            if (w.hasOwnProperty(l)) {
                if (e = [],
                n = w[l],
                n.name && (e.push(n.name.toLowerCase()),
                n.options && n.options.aliases && n.options.aliases.length))
                    for (t = 0; t < n.options.aliases.length; t++)
                        e.push(n.options.aliases[t].toLowerCase());
                for (r = o(n.fn, "function") ? n.fn() : n.fn,
                i = 0; i < e.length; i++)
                    s = e[i],
                    a = s.split("."),
                    1 === a.length ? Modernizr[a[0]] = r : (!Modernizr[a[0]] || Modernizr[a[0]]instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])),
                    Modernizr[a[0]][a[1]] = r),
                    _.push((r ? "" : "no-") + a.join("-"))
            }
    }
    function i(e) {
        var n = x.className
          , t = Modernizr._config.classPrefix || "";
        if (b && (n = n.baseVal),
        Modernizr._config.enableJSClass) {
            var o = new RegExp("(^|\\s)" + t + "no-js(\\s|$)");
            n = n.replace(o, "$1" + t + "js$2")
        }
        Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t),
        b ? x.className.baseVal = n : x.className = n)
    }
    function s(e, n) {
        if ("object" == typeof e)
            for (var t in e)
                S(e, t) && s(t, e[t]);
        else {
            e = e.toLowerCase();
            var o = e.split(".")
              , r = Modernizr[o[0]];
            if (2 == o.length && (r = r[o[1]]),
            "undefined" != typeof r)
                return Modernizr;
            n = "function" == typeof n ? n() : n,
            1 == o.length ? Modernizr[o[0]] = n : (!Modernizr[o[0]] || Modernizr[o[0]]instanceof Boolean || (Modernizr[o[0]] = new Boolean(Modernizr[o[0]])),
            Modernizr[o[0]][o[1]] = n),
            i([(n && 0 != n ? "" : "no-") + o.join("-")]),
            Modernizr._trigger(e, n)
        }
        return Modernizr
    }
    function a(e, n) {
        return function() {
            return e.apply(n, arguments)
        }
    }
    function l(e, n, t) {
        var r;
        for (var i in e)
            if (e[i]in n)
                return t === !1 ? e[i] : (r = n[e[i]],
                o(r, "function") ? a(r, t || n) : r);
        return !1
    }
    function f(e, n) {
        return !!~("" + e).indexOf(n)
    }
    function u() {
        return "function" != typeof n.createElement ? n.createElement(arguments[0]) : b ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments)
    }
    function c(e) {
        return e.replace(/([a-z])-([a-z])/g, function(e, n, t) {
            return n + t.toUpperCase()
        }).replace(/^-/, "")
    }
    function d(e) {
        return e.replace(/([A-Z])/g, function(e, n) {
            return "-" + n.toLowerCase()
        }).replace(/^ms-/, "-ms-")
    }
    function p() {
        var e = n.body;
        return e || (e = u(b ? "svg" : "body"),
        e.fake = !0),
        e
    }
    function h(e, t, o, r) {
        var i, s, a, l, f = "modernizr", c = u("div"), d = p();
        if (parseInt(o, 10))
            for (; o--; )
                a = u("div"),
                a.id = r ? r[o] : f + (o + 1),
                c.appendChild(a);
        return i = u("style"),
        i.type = "text/css",
        i.id = "s" + f,
        (d.fake ? d : c).appendChild(i),
        d.appendChild(c),
        i.styleSheet ? i.styleSheet.cssText = e : i.appendChild(n.createTextNode(e)),
        c.id = f,
        d.fake && (d.style.background = "",
        d.style.overflow = "hidden",
        l = x.style.overflow,
        x.style.overflow = "hidden",
        x.appendChild(d)),
        s = t(c, e),
        d.fake ? (d.parentNode.removeChild(d),
        x.style.overflow = l,
        x.offsetHeight) : c.parentNode.removeChild(c),
        !!s
    }
    function m(n, o) {
        var r = n.length;
        if ("CSS"in e && "supports"in e.CSS) {
            for (; r--; )
                if (e.CSS.supports(d(n[r]), o))
                    return !0;
            return !1
        }
        if ("CSSSupportsRule"in e) {
            for (var i = []; r--; )
                i.push("(" + d(n[r]) + ":" + o + ")");
            return i = i.join(" or "),
            h("@supports (" + i + ") { #modernizr { position: absolute; } }", function(e) {
                return "absolute" == getComputedStyle(e, null).position
            })
        }
        return t
    }
    function g(e, n, r, i) {
        function s() {
            l && (delete z.style,
            delete z.modElem)
        }
        if (i = o(i, "undefined") ? !1 : i,
        !o(r, "undefined")) {
            var a = m(e, r);
            if (!o(a, "undefined"))
                return a
        }
        for (var l, d, p, h, g, v = ["modernizr", "tspan"]; !z.style; )
            l = !0,
            z.modElem = u(v.shift()),
            z.style = z.modElem.style;
        for (p = e.length,
        d = 0; p > d; d++)
            if (h = e[d],
            g = z.style[h],
            f(h, "-") && (h = c(h)),
            z.style[h] !== t) {
                if (i || o(r, "undefined"))
                    return s(),
                    "pfx" == n ? h : !0;
                try {
                    z.style[h] = r
                } catch (y) {}
                if (z.style[h] != g)
                    return s(),
                    "pfx" == n ? h : !0
            }
        return s(),
        !1
    }
    function v(e, n, t, r, i) {
        var s = e.charAt(0).toUpperCase() + e.slice(1)
          , a = (e + " " + P.join(s + " ") + s).split(" ");
        return o(n, "string") || o(n, "undefined") ? g(a, n, r, i) : (a = (e + " " + E.join(s + " ") + s).split(" "),
        l(a, n, t))
    }
    function y(e, n, o) {
        return v(e, t, t, n, o)
    }
    var _ = []
      , w = []
      , C = {
        _version: "3.3.1",
        _config: {
            classPrefix: "",
            enableClasses: !0,
            enableJSClass: !0,
            usePrefixes: !0
        },
        _q: [],
        on: function(e, n) {
            var t = this;
            setTimeout(function() {
                n(t[e])
            }, 0)
        },
        addTest: function(e, n, t) {
            w.push({
                name: e,
                fn: n,
                options: t
            })
        },
        addAsyncTest: function(e) {
            w.push({
                name: null,
                fn: e
            })
        }
    }
      , Modernizr = function() {};
    Modernizr.prototype = C,
    Modernizr = new Modernizr;
    var S, x = n.documentElement, b = "svg" === x.nodeName.toLowerCase();
    !function() {
        var e = {}.hasOwnProperty;
        S = o(e, "undefined") || o(e.call, "undefined") ? function(e, n) {
            return n in e && o(e.constructor.prototype[n], "undefined")
        }
        : function(n, t) {
            return e.call(n, t)
        }
    }(),
    C._l = {},
    C.on = function(e, n) {
        this._l[e] || (this._l[e] = []),
        this._l[e].push(n),
        Modernizr.hasOwnProperty(e) && setTimeout(function() {
            Modernizr._trigger(e, Modernizr[e])
        }, 0)
    }
    ,
    C._trigger = function(e, n) {
        if (this._l[e]) {
            var t = this._l[e];
            setTimeout(function() {
                var e, o;
                for (e = 0; e < t.length; e++)
                    (o = t[e])(n)
            }, 0),
            delete this._l[e]
        }
    }
    ,
    Modernizr._q.push(function() {
        C.addTest = s
    }),
    Modernizr.addTest("svgasimg", n.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1"));
    var T = "Moz O ms Webkit"
      , P = C._config.usePrefixes ? T.split(" ") : [];
    C._cssomPrefixes = P;
    var E = C._config.usePrefixes ? T.toLowerCase().split(" ") : [];
    C._domPrefixes = E;
    var j = {
        elem: u("modernizr")
    };
    Modernizr._q.push(function() {
        delete j.elem
    });
    var z = {
        style: j.elem.style
    };
    Modernizr._q.unshift(function() {
        delete z.style
    }),
    C.testAllProps = v,
    C.testAllProps = y,
    Modernizr.addTest("csstransitions", y("transition", "all", !0)),
    r(),
    i(_),
    delete C.addTest,
    delete C.addAsyncTest;
    for (var N = 0; N < Modernizr._q.length; N++)
        Modernizr._q[N]();
    e.Modernizr = Modernizr
}(window, document);
